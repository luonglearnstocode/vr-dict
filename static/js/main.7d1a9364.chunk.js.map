{"version":3,"sources":["images/flags/en.png","images/flags/de.png","images/flags/da.png","images/flags/fi.png","images/flags/no.png","images/flags/sv.png","components/SignedInLinks.js","components/SignedOutLinks.js","components/Navbar.js","components/Result.js","components/Suggestion.js","components/Dictionary.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","SignedInLinks","react_default","a","createElement","className","NavLink","to","SignedOutLinks","Navbar","Link","components_SignedInLinks","components_SignedOutLinks","Result","_ref","_this","word","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","console","log","_ref2","setState","objectSpread","src","fi","alt","title","fiTerm","en","enTerm","de","deTerm","da","daTerm","no","noTerm","sv","svTerm","Component","Suggestion","props","language","image","concat","getSuggestionValue","suggestion","renderSuggestion","components_Suggestion","shouldRenderSuggestions","value","trim","length","Dictionary","onChange","event","newValue","result","onSuggestionsFetchRequested","_ref3","suggestions","escapedValue","replace","words","slice","regex","RegExp","filter","test","getSuggestions","onSuggestionsClearRequested","onSuggestionSelected","_ref4","suggestionValue","dict","w","lookUp","_this$state","inputProps","placeholder","dist_default","components_Result","App","date","Date","document","BrowserRouter","components_Navbar","toString","components_Dictionary","Boolean","window","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7d1a9364.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/en.54df9031.png\";","module.exports = __webpack_public_path__ + \"static/media/de.d9377c50.png\";","module.exports = __webpack_public_path__ + \"static/media/da.9b05fd26.png\";","module.exports = __webpack_public_path__ + \"static/media/fi.6ff5c04e.png\";","module.exports = __webpack_public_path__ + \"static/media/no.e156c007.png\";","module.exports = __webpack_public_path__ + \"static/media/sv.f772ff91.png\";","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst SignedInLinks = () => (\n  <ul className=\"right\">\n    <li><NavLink to=\"/\">Logout</NavLink></li>\n    <li><NavLink to=\"/\" className=\"btn btn-floating red darken-1\">LN</NavLink></li>\n  </ul>\n);\n\nexport default SignedInLinks;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst SignedOutLinks = () => (\n  <ul className=\"right\">\n    <li><NavLink to=\"/\">SignUp</NavLink></li>\n    <li><NavLink to=\"/\">Login</NavLink></li>\n  </ul>\n);\n\nexport default SignedOutLinks;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport SignedInLink from './SignedInLinks';\nimport SignedOutLinks from './SignedOutLinks';\n\nconst Navbar = () => (\n  <nav className=\"nav-wrapper light-green darken-2\">\n    <div className=\"container\">\n      <Link to=\"/\" className=\"brand-logo\">VR Translate</Link>\n      <SignedInLink />\n      <SignedOutLinks />\n    </div>\n  </nav>\n);\n\nexport default Navbar;\n","import React, { Component } from 'react';\nimport en from '../images/flags/en.png';\nimport de from '../images/flags/de.png';\nimport da from '../images/flags/da.png';\nimport fi from '../images/flags/fi.png';\nimport no from '../images/flags/no.png';\nimport sv from '../images/flags/sv.png';\nimport '../index.css';\n\n\nclass Result extends Component {\n  constructor({ word }) {\n    super();\n    this.state = { word };\n    console.log(this.state);\n  }\n\n  componentWillReceiveProps({ word }) {\n    this.setState({ ...this.state, word });\n  }\n\n  render() {\n    console.log(this.state);\n\n    return (\n      <div className=\"col s12 m8 offset-m2 l6 offset-l3\">\n        <div className=\"card-panel grey lighten-5 z-depth-1\">\n          <div className=\"row valign-wrapper\">\n            <div className=\"col s2 l1\">\n              <img src={fi} alt=\"finland flag icon\" className=\"circle responsive-img\" title=\"Finnish\" />\n            </div>\n            <div className=\"col s9 l10\">\n              <span className=\"black-text\">\n                { this.state.word.fiTerm }\n              </span>\n            </div>\n          </div>\n          <div className=\"row valign-wrapper\">\n            <div className=\"col s2 l1\">\n              <img src={en} alt=\"english flag icon\" className=\"circle responsive-img\" title=\"English\" />\n            </div>\n            <div className=\"col s9 l10\">\n              <span className=\"black-text\">\n                { this.state.word.enTerm }\n              </span>\n            </div>\n          </div>\n          <div className=\"row valign-wrapper\">\n            <div className=\"col s2 l1\">\n              <img src={de} alt=\"germany flag icon\" className=\"circle responsive-img\" title=\"German\" />\n            </div>\n            <div className=\"col s9 l10\">\n              <span className=\"black-text\">\n                { this.state.word.deTerm }\n              </span>\n            </div>\n          </div>\n          <div className=\"row valign-wrapper\">\n            <div className=\"col s2 l1\">\n              <img src={da} alt=\"denmark flag icon\" className=\"circle responsive-img\" title=\"Danish\" />\n            </div>\n            <div className=\"col s9 l10\">\n              <span className=\"black-text\">\n                { this.state.word.daTerm }\n              </span>\n            </div>\n          </div>\n          <div className=\"row valign-wrapper\">\n            <div className=\"col s2 l1\">\n              <img src={no} alt=\"norway flag icon\" className=\"circle responsive-img\" title=\"Norwegian\" />\n            </div>\n            <div className=\"col s9 l10\">\n              <span className=\"black-text\">\n                { this.state.word.noTerm }\n              </span>\n            </div>\n          </div>\n          <div className=\"row valign-wrapper\">\n            <div className=\"col s2 l1\">\n              <img src={sv} alt=\"sweden flag icon\" className=\"circle responsive-img\" title=\"Swedish\" />\n            </div>\n            <div className=\"col s9 l10\">\n              <span className=\"black-text\">\n                { this.state.word.svTerm }\n              </span>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Result;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Suggestion(props) {\n  const { word, language } = props;\n  const image = `./images/flags/${language}.png`;\n  return (\n    <div className=\"row valign-wrapper\">\n      <div className=\"col s2 l1\">\n        <img src={image} alt={language} className=\"circle responsive-img\" title={language} />\n      </div>\n      <div className=\"col s9 l10\">\n        <span className=\"black-text\">\n          { word }\n        </span>\n      </div>\n    </div>\n  );\n}\n\nSuggestion.propTypes = {\n  word: PropTypes.string.isRequired,\n  language: PropTypes.string.isRequired,\n};\n\nexport default Suggestion;\n","import React, { Component } from 'react';\nimport Autosuggest from 'react-autosuggest';\nimport Result from './Result';\nimport Suggestion from './Suggestion';\nimport dict from '../dict';\nimport words from '../words';\n\n// https://developer.mozilla.org/en/docs/Web/JavaScript/Guide/Regular_Expressions#Using_Special_Characters\nfunction escapeRegexCharacters(str) {\n  return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n}\n\nfunction lookUp({ word, language }) { // look up word(suggestion) from dict\n  return dict.filter(w => w[`${language}Term`] === word)[0];\n}\n\nfunction getSuggestions(value) {\n  const escapedValue = escapeRegexCharacters(value.trim());\n\n  if (escapedValue === '') { // only display the first 100 words\n    return words.slice(0, 100);\n  }\n\n  const regex = new RegExp(`^${escapedValue}`, 'i');\n\n  return words.filter(word => regex.test(word.word));\n}\n\nfunction getSuggestionValue(suggestion) {\n  return suggestion.word;\n}\n\n\nfunction renderSuggestion(suggestion) {\n  return (\n    <Suggestion word={suggestion.word} language={suggestion.language} />\n  );\n}\n\nfunction shouldRenderSuggestions(value) {\n  return value.trim().length >= 0;\n}\n\nclass Dictionary extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      value: '',\n      result: '',\n      suggestions: words,\n    };\n  }\n\n  onChange = (event, { newValue }) => {\n    this.setState({\n      result: '',\n      value: newValue,\n    });\n  };\n\n  onSuggestionsFetchRequested = ({ value }) => {\n    this.setState({\n      suggestions: getSuggestions(value),\n    });\n  };\n\n  onSuggestionsClearRequested = () => {\n    this.setState({\n      suggestions: [],\n    });\n  };\n\n  onSuggestionSelected = (event, { suggestion, suggestionValue }) => {\n    // console.log(lookUp(suggestion));\n    this.setState({\n      result: lookUp(suggestion),\n    });\n    // console.log(suggestionValue);\n  };\n\n\n  render() {\n    const { value, suggestions, result } = this.state;\n    const inputProps = {\n      placeholder: 'type',\n      value,\n      onChange: this.onChange,\n    };\n\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <Autosuggest\n            suggestions={suggestions}\n            onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\n            onSuggestionsClearRequested={this.onSuggestionsClearRequested}\n            onSuggestionSelected={this.onSuggestionSelected}\n            getSuggestionValue={getSuggestionValue}\n            renderSuggestion={renderSuggestion}\n            shouldRenderSuggestions={shouldRenderSuggestions}\n            // alwaysRenderSuggestions={true}\n            inputProps={inputProps}\n          />\n\n        </div>\n        { result ? <Result word={result} /> : null }\n        {/* <div className=\"container\">{ result }</div> */}\n      </div>\n    );\n  }\n}\n\nexport default Dictionary;\n","import React, { Component } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport Navbar from './components/Navbar';\nimport Dictionary from './components/Dictionary';\n\n// import logo from './images/logo.png';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { date: new Date() };\n  }\n\n  componentDidMount() {\n    document.title = 'VR dictionary';\n  }\n\n  render() {\n    const { date } = this.state;\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          It is\n          { date.toString() }\n          <div className=\"row center-align\">\n            <img src=\"./images/logo.png\" alt=\"vr logo\" className=\"responsive-img\" />\n          </div>\n          <Dictionary />\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}