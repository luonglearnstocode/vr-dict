{"version":3,"sources":["components/Listen.js","components/Word.js","components/Result.js","components/Suggestion.js","components/LanguageOption.js","components/MultiValueLabel.js","components/Dictionary.js","App.js","serviceWorker.js","index.js"],"names":["Listen","_ref","language","word","react_default","a","createElement","type","onClick","utterance","SpeechSynthesisUtterance","lang","speechSynthesis","speak","className","title","languages","en","fi","da","de","sv","no","Word","usageNote","image","concat","style","margin","align","src","alt","lib","text","components_Listen","defaultProps","Result","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","_ref2","setState","objectSpread","_this$state","translations","filter","value","fromLanguage","map","key","components_Word","Component","Suggestion","query","matches","AutosuggestHighlightMatch","parts","AutosuggestHighlightParse","padding","fontSize","part","index","highlight","Option","components","labelToLanguage","LanguageOption","props","data","label","MultiValueLabel","width","options","getSuggestionValue","suggestion","getSuggestions","escapedValue","trim","replace","regex","RegExp","words","test","renderSuggestion","components_Suggestion","shouldRenderSuggestions","length","Dictionary","onChange","event","_ref3","newValue","result","onSuggestionsFetchRequested","_ref4","suggestions","onSuggestionsClearRequested","onSuggestionSelected","_ref5","suggestionValue","dict","w","lookUp","handleSelect","selectedOption","selectedLanguages","localStorage","setItem","JSON","stringify","cachedHits","getItem","parse","loadSelectedLanguages","inputProps","placeholder","dist_default","focusInputOnSuggestionClick","react_select_esm","isMulti","isSearchable","closeMenuOnSelect","blurInputOnSelect","components_Result","App","document","id","components_Dictionary","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.bb1ea146.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Listen({ language, word }) {\n  const playSound = () => {\n    // const url = `https://translate.google.com/translate_tts?ie=UTF-8&q=${word}&tl=${language}&client=tw-ob`;\n    // console.log(url)\n    // const audio = new Audio(url);\n    // audio.play();\n    const utterance = new SpeechSynthesisUtterance(word);\n    utterance.lang = language;\n    // utterance.lang = language === 'de' ? 'de-DE' : 'en-US';\n    speechSynthesis.speak(utterance);\n  };\n\n  return (\n    <button type=\"submit\" onClick={playSound} className=\"btn-flat\" title=\"listen\">\n      <i className=\"material-icons\">volume_up</i>\n    </button>\n  );\n}\n\nexport default Listen;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport Listen from './Listen';\n\nconst languages = {\n  en: 'English',\n  fi: 'Finnish',\n  da: 'Danish',\n  de: 'German',\n  sv: 'Swedish',\n  no: 'Norwegian',\n};\n\nfunction Word({ language, word, usageNote }) {\n  const image = `./images/flags/${language}.png`;\n  return (\n    <div className=\"row valign-wrapper\" style={{ margin: 0 }}>\n      <div className=\"col s2 l1 offset-l1\">\n        <img align=\"middle\" src={image} alt={language} className=\"circle responsive-img\" title={languages[language]} />\n      </div>\n      <div className=\"col s6 l8 offset-l1\">\n        <h4 className=\"flow-text\">{ word }</h4>\n        <blockquote>\n          { usageNote }\n        </blockquote>\n      </div>\n      <div className=\"col s2 l1\">\n        <CopyToClipboard text={word}>\n          <button type=\"submit\" className=\"btn-flat\" title=\"copy to clipboard\">\n            <i className=\"material-icons\">content_copy</i>\n          </button>\n        </CopyToClipboard>\n      </div>\n      <div className=\"col s2 l1\">\n        <Listen word={word} language={language} />\n      </div>\n    </div>\n  );\n}\n\nWord.propTypes = {\n  word: PropTypes.string.isRequired,\n  language: PropTypes.string.isRequired,\n  usageNote: PropTypes.string,\n};\n\nWord.defaultProps = {\n  usageNote: '',\n};\n\nexport default Word;\n","import React, { Component } from 'react';\n// import en from '../images/flags/en.png';\n// import de from '../images/flags/de.png';\n// import da from '../images/flags/da.png';\n// import fi from '../images/flags/fi.png';\n// import no from '../images/flags/no.png';\n// import sv from '../images/flags/sv.png';\nimport '../index.css';\nimport Word from './Word';\n\n// const languages = ['fi', 'en', 'de', 'sv', 'no', 'da'];\n\nclass Result extends Component {\n  constructor({ word, languages }) {\n    super();\n    this.state = { word, languages };\n  }\n\n  componentWillReceiveProps({ word, languages }) {\n    this.setState({ ...this.state, word, languages });\n  }\n\n  render() {\n    const { word, languages } = this.state;\n\n    const translations = (\n      <ul>\n        {languages\n          .filter(language => language.value !== word.fromLanguage && `${language.value}Term` in word) // if dict has translation to this word\n          .map(language => <li key={language.value}><Word language={language.value} word={word[`${language.value}Term`]} usageNote={word[`${language.value}UsageNote`]} /></li>)}\n      </ul>\n    );\n    // console.log(translations);\n\n    return (\n      <div className=\"result-box\">\n        <div className=\"col s12\">\n          <div className=\"grey lighten-2 z-depth-1\">\n            <Word language={word.fromLanguage} word={word[`${word.fromLanguage}Term`]} usageNote={word[`${word.fromLanguage}UsageNote`]} />\n          </div>\n          <div className=\"grey lighten-4 z-depth-1\">\n            {translations}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Result;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport AutosuggestHighlightMatch from 'autosuggest-highlight/match';\nimport AutosuggestHighlightParse from 'autosuggest-highlight/parse';\n\n\nfunction Suggestion({ word, language, query }) {\n  const image = `./images/flags/${language}.png`;\n  // https://github.com/moroshko/autosuggest-highlight#examples\n  const matches = AutosuggestHighlightMatch(word, query);\n  const parts = AutosuggestHighlightParse(word, matches);\n\n  return (\n    <div className=\"row valign-wrapper\" style={{ margin: 0, padding: 0 }}>\n      <div className=\"col s2 l1\">\n        <img src={image} alt={language} className=\"circle responsive-img\" />\n      </div>\n      <div className=\"col s9 l10  offset-l1\" style={{ fontSize: 'large' }}>\n        {\n          parts.map((part, index) => {\n            const className = part.highlight ? 'red-text' : 'black-text';\n            return (\n              <span className={className} key={index}>{part.text}</span>\n            );\n          })\n        }\n      </div>\n    </div>\n  );\n}\n\nSuggestion.propTypes = {\n  word: PropTypes.string.isRequired,\n  language: PropTypes.string.isRequired,\n};\n\nexport default Suggestion;\n","import { components } from 'react-select';\nimport React from 'react';\n\nconst { Option } = components;\n\nconst labelToLanguage = {\n  en: 'English',\n  fi: 'Finnish',\n  da: 'Danish',\n  de: 'German',\n  sv: 'Swedish',\n  no: 'Norwegian',\n};\n\n\nconst LanguageOption = props => (\n  <Option {...props}>\n    <div className=\"row valign-wrapper\" style={{ margin: 0, padding: 0 }}>\n      <div className=\"col s2 l1\">\n        <img src={`./images/flags/${props.data.label}.png`} alt={props.data.label} className=\"circle responsive-img\" />\n      </div>\n      <div className=\"col s9 l10  offset-l1\" style={{ fontSize: 'large' }}>\n        { labelToLanguage[props.data.label] }\n      </div>\n    </div>\n  </Option>\n);\n\nexport default LanguageOption;\n","import React from 'react';\n\nconst labelToLanguage = {\n  en: 'English',\n  fi: 'Finnish',\n  da: 'Danish',\n  de: 'German',\n  sv: 'Swedish',\n  no: 'Norwegian',\n};\n\n\nconst MultiValueLabel = props => (\n  <div>\n    <img src={`./images/flags/${props.data.label}.png`} alt={props.data.label} title={labelToLanguage[props.data.label]} className=\"circle\" width=\"30vw\" />\n  </div>\n);\n\nexport default MultiValueLabel;\n","import React, { Component } from 'react';\nimport Autosuggest from 'react-autosuggest';\nimport Select from 'react-select';\nimport Result from './Result';\nimport Suggestion from './Suggestion';\nimport dict from '../dict';\nimport words from '../words';\n// import Select from 'react-select-plus';\nimport LanguageOption from './LanguageOption';\nimport MultiValueLabel from './MultiValueLabel';\n\nconst options = [\n  { value: 'en', label: 'en' },\n  { value: 'fi', label: 'fi' },\n  { value: 'de', label: 'de' },\n  { value: 'no', label: 'no' },\n  { value: 'sv', label: 'sv' },\n  { value: 'da', label: 'da' },\n];\n\n// https://developer.mozilla.org/en/docs/Web/JavaScript/Guide/Regular_Expressions#Using_Special_Characters\nfunction escapeRegexCharacters(str) {\n  return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n}\n\nfunction lookUp({ word, language }) { // look up word(suggestion) from dict\n  const result = dict.filter(w => w[`${language}Term`] === word)[0];\n  result.fromLanguage = language;\n  return result;\n}\n\nfunction getSuggestionValue(suggestion) {\n  return suggestion.word;\n}\n\nfunction getSuggestions(value) {\n  const escapedValue = escapeRegexCharacters(value.trim());\n  // const escapedValue = value.trim();\n\n  if (escapedValue === '') { // not display suggestions when input is blank\n    return [];\n  }\n\n  // match words in the middle of the string\n  // https://stackoverflow.com/questions/3507453/regex-match-for-beginning-of-multiple-words-in-string\n  const regex = new RegExp(`\\\\s(${escapedValue}[^\\\\s]*)|^(${escapedValue}[^\\\\s]*)`, 'i');\n\n  return words.filter(word => regex.test(getSuggestionValue(word)));\n}\n\nfunction renderSuggestion(suggestion, { query }) {\n  return (\n    <Suggestion word={suggestion.word} language={suggestion.language} query={query} />\n  );\n}\n\nfunction shouldRenderSuggestions(value) {\n  return value.trim().length >= 0;\n}\n\nfunction loadSelectedLanguages() {\n  const defaultLanguages = [\n    { value: 'en', label: 'en' },\n    { value: 'fi', label: 'fi' },\n  ];\n  const cachedHits = localStorage.getItem('selectedLanguages');\n  // console.log(cachedHits);\n  return JSON.parse(cachedHits) || defaultLanguages;\n}\n\n\nclass Dictionary extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      value: '',\n      result: '',\n      suggestions: getSuggestions(''),\n      selectedLanguages: loadSelectedLanguages(),\n    };\n  }\n\n  onChange = (event, { newValue }) => {\n    this.setState({\n      result: '',\n      value: newValue,\n    });\n  };\n\n  onSuggestionsFetchRequested = ({ value }) => {\n    this.setState({\n      suggestions: getSuggestions(value),\n    });\n  };\n\n  onSuggestionsClearRequested = () => {\n    this.setState({\n      suggestions: getSuggestions(''),\n    });\n  };\n\n  onSuggestionSelected = (event, { suggestion, suggestionValue }) => {\n    // console.log(lookUp(suggestion));\n    this.setState({\n      result: lookUp(suggestion),\n      value: '', // clear input field after selected\n\n    });\n  };\n\n  handleSelect = (selectedOption) => {\n    this.setState({ selectedLanguages: selectedOption });\n    localStorage.setItem('selectedLanguages', JSON.stringify(selectedOption));\n    // console.log(selectedOption);\n  }\n\n  render() {\n    const {\n      value, suggestions, result, selectedLanguages,\n    } = this.state;\n\n    const inputProps = {\n      placeholder: 'type',\n      value,\n      onChange: this.onChange,\n    };\n\n    return (\n      <div className=\"container\">\n        <div className=\"row suggest\">\n          <Autosuggest\n            suggestions={suggestions}\n            onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\n            onSuggestionsClearRequested={this.onSuggestionsClearRequested}\n            onSuggestionSelected={this.onSuggestionSelected}\n            getSuggestionValue={getSuggestionValue}\n            renderSuggestion={renderSuggestion}\n            shouldRenderSuggestions={shouldRenderSuggestions}\n            focusInputOnSuggestionClick={false}\n            // alwaysRenderSuggestions={true}\n            inputProps={inputProps}\n          />\n        </div>\n        <div className=\"row select\">\n          <Select\n            value={selectedLanguages}\n            onChange={this.handleSelect}\n            options={options}\n            components={{ Option: LanguageOption, MultiValueLabel }}\n            isMulti\n            isSearchable={false}\n            closeMenuOnSelect={false}\n            blurInputOnSelect={false}\n            placeholder=\"Select languages\"\n          />\n        </div>\n        { result ? <Result word={result} languages={selectedLanguages} /> : null }\n      </div>\n    );\n  }\n}\n\nexport default Dictionary;\n","import React, { Component } from 'react';\nimport Dictionary from './components/Dictionary';\n\nclass App extends Component {\n  componentDidMount() {\n    document.title = 'VR Translate';\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"row center-align\" style={{ margin: 0 }}>\n          <img id=\"logo\" src=\"./images/logo.png\" alt=\"vr logo\" className=\"responsive-img\" />\n        </div>\n        <Dictionary />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}